package com.metaexploit.diversight.di

import com.metaexploit.diversight.network.DiversightService
import com.metaexploit.diversight.network.NetworkDataSource
import com.metaexploit.diversight.network.NetworkDataSourceImpl
import okhttp3.OkHttpClient
import okhttp3.logging.HttpLoggingInterceptor
import org.koin.dsl.module
import retrofit2.Retrofit
import retrofit2.converter.gson.GsonConverterFactory
import java.util.concurrent.TimeUnit

val networkModule = module {

    single<DiversightService> {
        Retrofit.Builder()
            .baseUrl("http://heroku-diversight.herokuapp.com/")
            .client(get())
            .addConverterFactory(GsonConverterFactory.create())
            .build().create(DiversightService::class.java)
    }

    single<OkHttpClient> {
        OkHttpClient.Builder()
            .readTimeout(60, TimeUnit.SECONDS)
            .connectTimeout(60, TimeUnit.SECONDS)
            .addInterceptor(HttpLoggingInterceptor().apply {
                level = HttpLoggingInterceptor.Level.BODY
            }).build()
    }

    single<NetworkDataSource> {
        NetworkDataSourceImpl(get())
    }
}