package com.metaexploit.diversight

import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.util.Log
import android.view.View
import androidx.databinding.DataBindingUtil
import androidx.lifecycle.Observer
import androidx.navigation.findNavController
import com.metaexploit.diversight.databinding.ActivityMainBinding
import org.koin.androidx.viewmodel.ext.android.getViewModel

class MainActivity : AppCompatActivity() {

    private lateinit var binding: ActivityMainBinding


    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        binding = DataBindingUtil.setContentView(this, R.layout.activity_main)

        /**
         *  TODO(1) O LiveData observa o valor apenas quando ele é alterado da própria Activity.
         *  O ViewModel foi iniciado utilizando injeção de dependências com Koin, ou seja, existe
         *  apenas uma instância do mesmo. Quando o LiveData é modificado pela UserFragment.kt,
         *  o ViewModel se comporta como esperado e atualiza o valor do LiveData, mas nada é
         *  refletido no observador instanciado na MainActivity.kt
         * */


        val viewModel: MyViewModel = getViewModel()
        val observer = Observer<Boolean> {
            Log.i("TESTE", "MainActivity: observando")
            binding.bottomNavigationView.visibility = if (it) View.VISIBLE else View.GONE
        }
        viewModel.bnVisibility.observe(this, observer)

        binding.bottomNavigationView.setOnItemSelectedListener { item ->
            when(item.itemId) {
                R.id.userMenu -> {
                    this.findNavController(R.id.fgContainerView).navigate(R.id.userMenu)
                    true
                }
                R.id.homeMenu -> {
//                    viewModel.setBNVisibility(false)
                    this.findNavController(R.id.fgContainerView).navigate(R.id.homeMenu)
                    true
                }
                else -> false
            }
        }
    }
}