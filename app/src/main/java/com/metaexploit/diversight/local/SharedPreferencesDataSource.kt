package com.metaexploit.diversight.local

import android.content.SharedPreferences
import com.metaexploit.diversight.network.model.User
import com.metaexploit.diversight.network.model.UserRegister

class SharedPreferencesDataSource(
    private val sharedPreferences: SharedPreferences
) {

    fun saveCurrentUser(
        name: String, skin: String, sex: String,
        gender: String, pcd: Boolean, pcd_visual: Boolean,
        pcd_physical: Boolean, pcd_hearing: Boolean,
        pcd_intellectual: Boolean, pcd_psychosocial: Boolean,
        pcd_readapted: Boolean, birthday: String, enterprise: String,
        occupation: String, office: String, email: String
    ) {
        with(sharedPreferences.edit()) {
            putString(USER_NAME, name)
            putString(USER_SKIN, skin)
            putString(USER_SEX, sex)
            putString(USER_GENDER, gender)
            putString(USER_BIRTHDAY, birthday)
            putBoolean(USER_PCD, pcd)
            putBoolean(USER_PCD_VISUAL, pcd_visual)
            putBoolean(USER_PCD_PHYSICAL, pcd_physical)
            putBoolean(USER_PCD_HEARING, pcd_hearing)
            putBoolean(USER_PCD_INTELLECTUAL, pcd_intellectual)
            putBoolean(USER_PCD_PSYCHOSOCIAL, pcd_psychosocial)
            putBoolean(USER_PCD_READAPTED, pcd_readapted)
            putString(USER_ENTERPRISE, enterprise)
            putString(USER_OCCUPATION, occupation)
            putString(USER_OFFICE, office)
            putString(USER_EMAIL, email)
            commit()
        }
    }

    fun getCurrentUser(): User {
        val user: User
        with(sharedPreferences) {
            user = User(
                getInt(USER_ID, 0),
                getString(USER_NAME, "").toString(),
                getString(USER_SKIN, "").toString(),
                getString(USER_SEX, "").toString(),
                getString(USER_GENDER, "").toString(),
                getString(USER_BIRTHDAY, "").toString(),
                getBoolean(USER_PCD, false),
                getBoolean(USER_PCD_VISUAL, false),
                getBoolean(USER_PCD_PHYSICAL, false),
                getBoolean(USER_PCD_HEARING, false),
                getBoolean(USER_PCD_INTELLECTUAL, false),
                getBoolean(USER_PCD_PSYCHOSOCIAL, false),
                getBoolean(USER_PCD_READAPTED, false),
                getString(USER_ENTERPRISE, "").toString(),
                getString(USER_OCCUPATION, "").toString(),
                getString(USER_OFFICE, "").toString(),
                getString(USER_EMAIL, "").toString()
            )
        }
        return user
    }

    fun getRegisterUser(): UserRegister {
        val userRegister: UserRegister
        with(sharedPreferences) {
            userRegister = UserRegister(
                getString(REG_USER_NAME, "").toString(),
                getString(REG_USER_SKIN, "").toString(),
                getString(REG_USER_SEX, "").toString(),
                getString(REG_USER_GENDER, "").toString(),
                getString(REG_USER_BIRTHDAY, "").toString(),
                getBoolean(REG_USER_PCD, false),
                getBoolean(REG_USER_PCD_VISUAL, false),
                getBoolean(REG_USER_PCD_PHYSICAL, false),
                getBoolean(REG_USER_PCD_HEARING, false),
                getBoolean(REG_USER_PCD_INTELLECTUAL, false),
                getBoolean(REG_USER_PCD_PSYCHOSOCIAL, false),
                getBoolean(REG_USER_PCD_READAPTED, false),
                getString(REG_USER_ENTERPRISE, "").toString(),
                getString(REG_USER_OCCUPATION, "").toString(),
                getString(REG_USER_OFFICE, "").toString(),
                getString(REG_USER_EMAIL, "").toString(),
                getString(REG_USER_PASSWORD, "").toString()
            )
        }
        return userRegister
    }

    fun registerPersonalData(
        name: String, skin: String, sex: String,
        gender: String, pcd: Boolean, pcd_visual: Boolean,
        pcd_physical: Boolean, pcd_hearing: Boolean,
        pcd_intellectual: Boolean, pcd_psychosocial: Boolean,
        pcd_readapted: Boolean, birthday: String
    ) {
        with(sharedPreferences.edit()) {
            putString(REG_USER_NAME, name)
            putString(REG_USER_SKIN, skin)
            putString(REG_USER_SEX, sex)
            putString(REG_USER_GENDER, gender)
            putString(REG_USER_BIRTHDAY, birthday)
            putBoolean(REG_USER_PCD, pcd)
            putBoolean(REG_USER_PCD_VISUAL, pcd_visual)
            putBoolean(REG_USER_PCD_PHYSICAL, pcd_physical)
            putBoolean(REG_USER_PCD_HEARING, pcd_hearing)
            putBoolean(REG_USER_PCD_INTELLECTUAL, pcd_intellectual)
            putBoolean(REG_USER_PCD_PSYCHOSOCIAL, pcd_psychosocial)
            putBoolean(REG_USER_PCD_READAPTED, pcd_readapted)
            commit()
        }
    }

    fun registerUserWork(
        enterprise: String,
        occupation: String,
        office: String
    ) {
        with(sharedPreferences.edit()) {
            putString(REG_USER_ENTERPRISE, enterprise)
            putString(REG_USER_OCCUPATION, occupation)
            putString(REG_USER_OFFICE, office)
            commit()
        }
    }

    fun registerUserEmail(email: String) {
        with(sharedPreferences.edit()) {
            putString(REG_USER_EMAIL, email)
            commit()
        }
    }

    fun registerUserPassword(password: String) {
        with(sharedPreferences.edit()) {
            putString(REG_USER_PASSWORD, password)
            commit()
        }
    }

    companion object {
        const val SHARED_PREFERENCES = "SHARED_PREFERENCES"

        // REGISTER USER
        const val REG_USER_NAME = "REG_USER_NAME"
        const val REG_USER_SKIN = "REG_USER_SKIN"
        const val REG_USER_SEX = "REG_USER_SEX"
        const val REG_USER_GENDER = "REG_USER_GENDER"
        const val REG_USER_BIRTHDAY = "REG_USER_BIRTHDAY"
        const val REG_USER_PCD = "REG_USER_PCD"
        const val REG_USER_PCD_VISUAL = "REG_USER_PCD_VISUAL"
        const val REG_USER_PCD_PHYSICAL = "REG_USER_PCD_PHYSICAL"
        const val REG_USER_PCD_HEARING = "REG_USER_PCD_HEARING"
        const val REG_USER_PCD_INTELLECTUAL = "REG_USER_PCD_INTELLECTUAL"
        const val REG_USER_PCD_PSYCHOSOCIAL = "REG_USER_PCD_PSYCHOSOCIAL"
        const val REG_USER_PCD_READAPTED = "REG_USER_PCD_READAPTED"
        const val REG_USER_ENTERPRISE = "REG_USER_ENTERPRISE"
        const val REG_USER_OCCUPATION = "REG_USER_OCCUPATION"
        const val REG_USER_OFFICE = "REG_USER_OFFICE"
        const val REG_USER_EMAIL = "REG_USER_EMAIL"
        const val REG_USER_PASSWORD = "REG_USER_PASSWORD"

        // CURRENT USER
        const val USER_ID = "USER_ID"
        const val USER_NAME = "USER_NAME"
        const val USER_SKIN = "USER_SKIN"
        const val USER_SEX = "USER_SEX"
        const val USER_GENDER = "USER_GENDER"
        const val USER_BIRTHDAY = "USER_BIRTHDAY"
        const val USER_PCD = "USER_PCD"
        const val USER_PCD_VISUAL = "USER_PCD_VISUAL"
        const val USER_PCD_PHYSICAL = "USER_PCD_PHYSICAL"
        const val USER_PCD_HEARING = "USER_PCD_HEARING"
        const val USER_PCD_INTELLECTUAL = "USER_PCD_INTELLECTUAL"
        const val USER_PCD_PSYCHOSOCIAL = "USER_PCD_PSYCHOSOCIAL"
        const val USER_PCD_READAPTED = "USER_PCD_READAPTED"
        const val USER_ENTERPRISE = "USER_ENTERPRISE"
        const val USER_OCCUPATION = "USER_OCCUPATION"
        const val USER_OFFICE = "USER_OFFICE"
        const val USER_EMAIL = "USER_EMAIL"
    }

}