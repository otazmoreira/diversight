package com.metaexploit.diversight.ui.main

import androidx.lifecycle.LiveData
import androidx.lifecycle.MutableLiveData
import androidx.lifecycle.ViewModel
import com.metaexploit.diversight.remote.DiversightService
import com.metaexploit.diversight.remote.User
import com.metaexploit.diversight.remote.request.Form
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.Dispatchers
import kotlinx.coroutines.launch
import retrofit2.Response

class MainViewModel : ViewModel() {

    private val _visibilityBN: MutableLiveData<Boolean> = MutableLiveData()
    val visibilityBN: LiveData<Boolean> = _visibilityBN

    private val _listForm: MutableLiveData<List<Form>> = MutableLiveData()
    val listForm: LiveData<List<Form>> = _listForm

    private val _user: MutableLiveData<User> = MutableLiveData()
    val user: LiveData<User> = _user

    // Get forms from backend
    fun getForms() {
        CoroutineScope(Dispatchers.IO).launch {
            val response = DiversightService.newInstance().getForm()
            CoroutineScope(Dispatchers.Main).launch {
                handleFormResponse(response)
            }
        }
    }

    private fun handleFormResponse(response: Response<List<Form>>) {
        if (response.isSuccessful) {
            response.body()?.let { forms ->
                _listForm.value = forms
            }
        }
    }

    fun setVisibilityBN(b: Boolean) {
        _visibilityBN.value = b
    }

    fun setUser(user: User) {
        _user.value = user
    }
}