package com.metaexploit.diversight.ui.sign.signup.enterprise

import android.os.Bundle
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import android.widget.Toast
import androidx.databinding.DataBindingUtil
import androidx.fragment.app.Fragment
import androidx.fragment.app.activityViewModels
import androidx.lifecycle.Observer
import androidx.navigation.fragment.findNavController
import com.metaexploit.diversight.R
import com.metaexploit.diversight.databinding.FragmentSignEnterpriseBinding
import com.metaexploit.diversight.ui.sign.signup.SignupViewModel
import com.metaexploit.diversight.ui.questions.questions_enterprise.EnterpriseQuestionsViewModel

class SignEnterpriseFragment : Fragment() {

    private val viewModel: SignEnterpriseViewModel by activityViewModels()
    private val signupViewModel: SignupViewModel by activityViewModels()
    private val enterpriseQuestionsViewModel: EnterpriseQuestionsViewModel by activityViewModels()
    private lateinit var binding: FragmentSignEnterpriseBinding

    override fun onCreateView(
        inflater: LayoutInflater, container: ViewGroup?,
        savedInstanceState: Bundle?
    ): View {
        signupViewModel.setProgress(37)
        enterpriseQuestionsViewModel.removeToastPermission()
        binding = DataBindingUtil.inflate(inflater, R.layout.fragment_sign_enterprise, container, false)
        return binding.root
    }

    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
        super.onViewCreated(view, savedInstanceState)

        val permissionObserver = Observer<Boolean> { permission ->
            if (permission) {
                this.findNavController().navigate(
                    SignEnterpriseFragmentDirections.actionSignEnterpriseFragmentToSignEmailFragment()
                )
                enterpriseQuestionsViewModel.removePermission()
            } else {
                enterpriseQuestionsViewModel.toastPermission.value?.let { toastPermission ->
                    if (toastPermission) {
                        Toast.makeText(activity, getString(R.string.empty_input), Toast.LENGTH_SHORT).show()
                    }
                }
            }
        }

        enterpriseQuestionsViewModel.permission.observe(viewLifecycleOwner, permissionObserver)

        binding.btnNext.setOnClickListener { enterpriseQuestionsViewModel.verifyIsEmpty() }
    }
}