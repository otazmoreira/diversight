package com.metaexploit.diversight.ui.main.home

import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import androidx.appcompat.widget.AppCompatImageView
import androidx.appcompat.widget.AppCompatTextView
import androidx.recyclerview.widget.RecyclerView
import com.metaexploit.diversight.R
import com.metaexploit.diversight.remote.request.Form

class HomeAdapter(
    private val setClick: (form: Form) -> Unit
) : RecyclerView.Adapter<HomeAdapter.ViewHolder>() {

    private var listItem: List<Form> = listOf()

    inner class ViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView) {
        fun bind(item: Form) {
            //  TODO("Try set fake date using object Date with current date in the first form and remove one day consecutive in other forms")
            // TODO("Using fake data, set correspondent status 'DisponÃ­vel', 'Pendente'")
            val img: Int
            val text: Int
            val status: Boolean

            when (item.type) {
                "diaria" -> {
                    img = R.drawable.img_research_daily
                    text = R.string.daily
                    status = true
                }
                "semanal" -> {
                    img = R.drawable.img_research_weekly
                    text = R.string.weekly
                    status = true
                }
                "nps" -> {
                    img = R.drawable.img_research_nps
                    text = R.string.nps
                    status = true
                }
                "adm" -> {
                    img = R.drawable.img_smile_card
                    text = R.string.adm
                    status = false
                }
                else -> {
                    img = R.drawable.img_sad_card
                    text = R.string.dem
                    status = false
                }
            }
            itemView.findViewById<AppCompatImageView>(R.id.imgType).setImageResource(img)
            itemView.findViewById<AppCompatTextView>(R.id.txtType).setText(text)
            itemView.findViewById<AppCompatImageView>(R.id.icStatus).visibility =
                if (status) View.VISIBLE else View.GONE
            itemView.setOnClickListener {
                setClick(item)
            }
        }
    }

    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ViewHolder {
        val view =
            LayoutInflater.from(parent.context).inflate(R.layout.item_research, parent, false)
        return ViewHolder(view)
    }

    override fun onBindViewHolder(holder: ViewHolder, position: Int) {
        holder.bind(listItem[position])
    }

    override fun getItemCount(): Int {
        return listItem.size
    }

    fun setList(list: List<Form>) {
        listItem = list
        notifyDataSetChanged()
    }
}