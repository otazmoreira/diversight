package com.metaexploit.diversight.ui.main.data_enterprise

import android.app.Activity
import android.content.Context
import android.widget.Toast
import androidx.lifecycle.ViewModel
import com.google.gson.Gson
import com.metaexploit.diversight.R
import com.metaexploit.diversight.network.DiversightService
import com.metaexploit.diversight.network.model.User
import com.metaexploit.diversight.network.response.DataUser
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.Dispatchers
import kotlinx.coroutines.launch

class DataEnterpriseViewModel : ViewModel() {

    private lateinit var currentUser: User
    private val gson = Gson()

    fun updateUserData(user: DataUser, activity: Activity?) {
//        CoroutineScope(Dispatchers.IO).launch {
//            val response = DiversightService.newInstance().updateUser(user)
//
//            CoroutineScope(Dispatchers.Main).launch {
//                if (response.isSuccessful) {
//                    setUser(user, activity)
//                    Toast.makeText(
//                        activity,
//                        activity?.getString(R.string.update_data_user),
//                        Toast.LENGTH_SHORT
//                    ).show()
//                } else {
//                    Toast.makeText(
//                        activity,
//                        activity?.getString(R.string.error),
//                        Toast.LENGTH_SHORT
//                    ).show()
//                }
//            }
//        }
    }

    private fun setUser(dataUser: DataUser, context: Activity?) {
//        val currentUser = getUserCurrent(context)
        val user = gson.toJson(
            User(
                id = dataUser.id,
                name = dataUser.name,
                skin = dataUser.skin,
                sex = dataUser.sex,
                gender = dataUser.gender,
                birthday = dataUser.birthday,
                pcd = dataUser.pcd,
                pcd_visual = dataUser.pcd_visual,
                pcd_physical = dataUser.pcd_physical,
                pcd_hearing = dataUser.pcd_hearing,
                pcd_intellectual = dataUser.pcd_intellectual,
                pcd_psychosocial = dataUser.pcd_psychosocial,
                pcd_readapted = dataUser.pcd_readapted,
                enterprise = dataUser.enterprise,
                occupation = dataUser.occupation,
                office = dataUser.office,
                email = currentUser.email
            )
        )
//        context?.let {
//            val sharedPref = context.getSharedPreferences(
//                context.getString(R.string.id_shared_pref),
//                Context.MODE_PRIVATE
//            ) ?: return
//            with(sharedPref.edit()) {
//                putString(context.getString(R.string.id_user), user)
//                commit()
//            }
//        }
    }

//    private fun getUserCurrent(context: Activity?): User {
//        val sharedPref = context?.getSharedPreferences(
//            context.getString(R.string.id_shared_pref),
//            Context.MODE_PRIVATE
//        )
//
//        return gson.fromJson(
//            sharedPref?.getString(context.getString(R.string.id_user), "") ?: "",
//            User::class.java
//        )
//    }
}