package com.metaexploit.diversight.ui.main.data_enterprise

import android.app.Activity
import android.widget.Toast
import androidx.lifecycle.ViewModel
import com.metaexploit.diversight.R
import com.metaexploit.diversight.remote.DiversightService
import com.metaexploit.diversight.remote.response.DataUser
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.Dispatchers
import kotlinx.coroutines.launch

class DataEnterpriseViewModel : ViewModel() {

    fun updateUserData(user: DataUser, activity: Activity?) {
        CoroutineScope(Dispatchers.IO).launch {
            val response = DiversightService.newInstance().updateUser(user)

            CoroutineScope(Dispatchers.Main).launch {
                if (response.isSuccessful) {
                    Toast.makeText(activity, activity?.getString(R.string.update_data_user), Toast.LENGTH_SHORT).show()
                } else {
                    Toast.makeText(activity, activity?.getString(R.string.error), Toast.LENGTH_SHORT).show()
                }
            }
        }
    }
}