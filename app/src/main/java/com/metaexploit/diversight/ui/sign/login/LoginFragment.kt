package com.metaexploit.diversight.ui.sign.login

import android.content.Intent
import android.os.Bundle
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import android.widget.Toast
import androidx.fragment.app.activityViewModels
import androidx.navigation.fragment.findNavController
import com.metaexploit.diversight.R
import com.metaexploit.diversight.databinding.FragmentLoginBinding
import com.metaexploit.diversight.ui.main.MainActivity
import com.metaexploit.diversight.ui.sign.SignViewModel
import com.metaexploit.diversight.uikit.BaseFragment
import org.koin.androidx.viewmodel.ext.android.viewModel

class LoginFragment : BaseFragment<FragmentLoginBinding>() {

    private val loginViewModel: LoginViewModel by viewModel()
    private val signViewModel: SignViewModel by activityViewModels()

    override fun onCreateView(
        inflater: LayoutInflater, container: ViewGroup?,
        savedInstanceState: Bundle?
    ): View = FragmentLoginBinding.inflate(inflater, container, false).apply {
        binding = this
        signViewModel.removeBackPermission()
    }.root

    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
        super.onViewCreated(view, savedInstanceState)

        setLightStatusBar(true)
        setListeners()
        setObservers()
    }

    // Start MainActivity
    private fun navigateToMainActivity() {
        val intent = Intent(activity, MainActivity::class.java)
        activity?.startActivity(intent)
    }

    private fun setListeners() {
        binding?.btnLogin?.setOnClickListener { buttonView ->

            binding?.inputEmail?.apply {
                setMessageVisible(false)
                setErrorState(false)
            }
            binding?.inputPassword?.apply {
                setMessageVisible(false)
                setErrorState(false)
            }

            hideKeyboard(buttonView)

            val email = binding?.inputEmail?.input?.text.toString()
            val password = binding?.inputPassword?.input?.text.toString()

            loginViewModel.login(email, password)
        }

        binding?.btnSignup?.setOnClickListener {
            this.findNavController().navigate(
                LoginFragmentDirections.actionLoginFragmentToSignupFragment()
            )
        }
    }

    private fun setObservers() {
        loginViewModel.isLoading.observe(viewLifecycleOwner, {

        })

        loginViewModel.onResponse.observe(viewLifecycleOwner, { response ->
            when(response) {
                0 -> {
                    binding?.inputEmail?.apply {
                        setMessageVisible(true)
                        setErrorState(true)
                    }
                }
                1 -> {
                    binding?.inputPassword?.apply {
                        setMessageVisible(true)
                        setErrorState(true)
                    }
                }
                2 -> {
                    navigateToMainActivity()
                }
                3 -> {
                    Toast.makeText(requireActivity(), getString(R.string.no_internet), Toast.LENGTH_SHORT).show()
                }
            }
        })
    }


}