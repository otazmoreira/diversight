package com.metaexploit.diversight.ui.main.data_user

import android.app.Activity
import android.widget.Toast
import androidx.lifecycle.ViewModel
import com.metaexploit.diversight.R
import com.metaexploit.diversight.remote.DiversightService
import com.metaexploit.diversight.remote.User
import com.metaexploit.diversight.remote.response.DataUser
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.Dispatchers
import kotlinx.coroutines.launch
import timber.log.Timber

class DataUserViewModel : ViewModel() {

    fun updateUserData(user: DataUser, activity: Activity?) {
        CoroutineScope(Dispatchers.IO).launch {
            Timber.d("JOOJ Entrei na Coroutine")
            Timber.d("JOOJ User: $user")
            val response = DiversightService.newInstance().updateUser(user)
            Timber.d("JOOJ Terminou Diversight Service")

           CoroutineScope(Dispatchers.Main).launch {
               if (response.isSuccessful) {
                   Timber.d("JOOJ SUCCESSFUL")
                   Toast.makeText(activity, activity?.getString(R.string.update_data_user), Toast.LENGTH_SHORT).show()
               } else {
                   Timber.d("JOOJ FAIL")
                   Timber.d("JOOJ Erro: ${response.errorBody()}")
                   Toast.makeText(activity, activity?.getString(R.string.error), Toast.LENGTH_SHORT).show()
               }
           }
        }
    }
}